{"ast":null,"code":"function createRenderStep(runNextFrame) {\n  var toRun = [];\n  var toRunNextFrame = [];\n  var numToRun = 0;\n  var isProcessing = false;\n  var toKeepAlive = new WeakSet();\n  var step = {\n    schedule: function schedule(callback, keepAlive, immediate) {\n      if (keepAlive === void 0) {\n        keepAlive = false;\n      }\n\n      if (immediate === void 0) {\n        immediate = false;\n      }\n\n      var addToCurrentFrame = immediate && isProcessing;\n      var buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n      if (keepAlive) toKeepAlive.add(callback);\n\n      if (buffer.indexOf(callback) === -1) {\n        buffer.push(callback);\n        if (addToCurrentFrame && isProcessing) numToRun = toRun.length;\n      }\n\n      return callback;\n    },\n    cancel: function cancel(callback) {\n      var index = toRunNextFrame.indexOf(callback);\n      if (index !== -1) toRunNextFrame.splice(index, 1);\n      toKeepAlive[\"delete\"](callback);\n    },\n    process: function process(frameData) {\n      var _a;\n\n      isProcessing = true;\n      _a = [toRunNextFrame, toRun], toRun = _a[0], toRunNextFrame = _a[1];\n      toRunNextFrame.length = 0;\n      numToRun = toRun.length;\n\n      if (numToRun) {\n        for (var i = 0; i < numToRun; i++) {\n          var callback = toRun[i];\n          callback(frameData);\n\n          if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n          }\n        }\n      }\n\n      isProcessing = false;\n    }\n  };\n  return step;\n}\n\nexport { createRenderStep };","map":{"version":3,"sources":["/home/adrian/programacion/adrian/bodaWebsite/source/node_modules/framesync/dist/es/create-render-step.js"],"names":["createRenderStep","runNextFrame","toRun","toRunNextFrame","numToRun","isProcessing","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","buffer","add","indexOf","push","length","cancel","index","splice","process","frameData","_a","i","has"],"mappings":"AAAA,SAASA,gBAAT,CAA0BC,YAA1B,EAAwC;AACpC,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,cAAc,GAAG,EAArB;AACA,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,YAAY,GAAG,KAAnB;AACA,MAAIC,WAAW,GAAG,IAAIC,OAAJ,EAAlB;AACA,MAAIC,IAAI,GAAG;AACPC,IAAAA,QAAQ,EAAE,kBAAUC,QAAV,EAAoBC,SAApB,EAA+BC,SAA/B,EAA0C;AAChD,UAAID,SAAS,KAAK,KAAK,CAAvB,EAA0B;AAAEA,QAAAA,SAAS,GAAG,KAAZ;AAAoB;;AAChD,UAAIC,SAAS,KAAK,KAAK,CAAvB,EAA0B;AAAEA,QAAAA,SAAS,GAAG,KAAZ;AAAoB;;AAChD,UAAIC,iBAAiB,GAAGD,SAAS,IAAIP,YAArC;AACA,UAAIS,MAAM,GAAGD,iBAAiB,GAAGX,KAAH,GAAWC,cAAzC;AACA,UAAIQ,SAAJ,EACIL,WAAW,CAACS,GAAZ,CAAgBL,QAAhB;;AACJ,UAAII,MAAM,CAACE,OAAP,CAAeN,QAAf,MAA6B,CAAC,CAAlC,EAAqC;AACjCI,QAAAA,MAAM,CAACG,IAAP,CAAYP,QAAZ;AACA,YAAIG,iBAAiB,IAAIR,YAAzB,EACID,QAAQ,GAAGF,KAAK,CAACgB,MAAjB;AACP;;AACD,aAAOR,QAAP;AACH,KAdM;AAePS,IAAAA,MAAM,EAAE,gBAAUT,QAAV,EAAoB;AACxB,UAAIU,KAAK,GAAGjB,cAAc,CAACa,OAAf,CAAuBN,QAAvB,CAAZ;AACA,UAAIU,KAAK,KAAK,CAAC,CAAf,EACIjB,cAAc,CAACkB,MAAf,CAAsBD,KAAtB,EAA6B,CAA7B;AACJd,MAAAA,WAAW,UAAX,CAAmBI,QAAnB;AACH,KApBM;AAqBPY,IAAAA,OAAO,EAAE,iBAAUC,SAAV,EAAqB;AAC1B,UAAIC,EAAJ;;AACAnB,MAAAA,YAAY,GAAG,IAAf;AACAmB,MAAAA,EAAE,GAAG,CAACrB,cAAD,EAAiBD,KAAjB,CAAL,EAA8BA,KAAK,GAAGsB,EAAE,CAAC,CAAD,CAAxC,EAA6CrB,cAAc,GAAGqB,EAAE,CAAC,CAAD,CAAhE;AACArB,MAAAA,cAAc,CAACe,MAAf,GAAwB,CAAxB;AACAd,MAAAA,QAAQ,GAAGF,KAAK,CAACgB,MAAjB;;AACA,UAAId,QAAJ,EAAc;AACV,aAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrB,QAApB,EAA8BqB,CAAC,EAA/B,EAAmC;AAC/B,cAAIf,QAAQ,GAAGR,KAAK,CAACuB,CAAD,CAApB;AACAf,UAAAA,QAAQ,CAACa,SAAD,CAAR;;AACA,cAAIjB,WAAW,CAACoB,GAAZ,CAAgBhB,QAAhB,CAAJ,EAA+B;AAC3BF,YAAAA,IAAI,CAACC,QAAL,CAAcC,QAAd;AACAT,YAAAA,YAAY;AACf;AACJ;AACJ;;AACDI,MAAAA,YAAY,GAAG,KAAf;AACH;AAtCM,GAAX;AAwCA,SAAOG,IAAP;AACH;;AAED,SAASR,gBAAT","sourcesContent":["function createRenderStep(runNextFrame) {\n    var toRun = [];\n    var toRunNextFrame = [];\n    var numToRun = 0;\n    var isProcessing = false;\n    var toKeepAlive = new WeakSet();\n    var step = {\n        schedule: function (callback, keepAlive, immediate) {\n            if (keepAlive === void 0) { keepAlive = false; }\n            if (immediate === void 0) { immediate = false; }\n            var addToCurrentFrame = immediate && isProcessing;\n            var buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        cancel: function (callback) {\n            var index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        process: function (frameData) {\n            var _a;\n            isProcessing = true;\n            _a = [toRunNextFrame, toRun], toRun = _a[0], toRunNextFrame = _a[1];\n            toRunNextFrame.length = 0;\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (var i = 0; i < numToRun; i++) {\n                    var callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n"]},"metadata":{},"sourceType":"module"}