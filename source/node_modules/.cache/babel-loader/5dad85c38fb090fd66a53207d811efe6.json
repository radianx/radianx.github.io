{"ast":null,"code":"var _jsxFileName = \"/home/adrian/programacion/adrian/bodaWebsite/source/src/components/Middle/StatsGridWithImage.jsx\";\nimport { Stack, Container, Box, Flex, Text, Heading, SimpleGrid } from '@chakra-ui/react';\nimport LandingTwo from '../../images/landing2.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StatsGridWithImage(props) {\n  var _this = this;\n\n  var title = props.title,\n      subtitle = props.subtitle,\n      stats = props.stats,\n      secondary = props.secondary;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    bg: 'orange.200',\n    position: 'relative',\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      flex: 1,\n      zIndex: 0,\n      display: {\n        base: 'none',\n        lg: 'flex'\n      },\n      backgroundImage: LandingTwo,\n      backgroundSize: 'cover',\n      backgroundPosition: \"center\",\n      backgroundRepeat: \"no-repeat\",\n      position: 'absolute',\n      width: '50%',\n      insetY: 0,\n      right: secondary ? '50%' : '0',\n      children: secondary ? /*#__PURE__*/_jsxDEV(Flex, {\n        bgGradient: 'linear(to-l, orange.200 10%, transparent)',\n        w: 'full',\n        h: 'full'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Flex, {\n        bgGradient: 'linear(to-r, orange.200 10%, transparent)',\n        w: 'full',\n        h: 'full'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: '7xl',\n      zIndex: 10,\n      position: 'relative',\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: {\n          base: 'column',\n          lg: 'row'\n        },\n        children: [secondary ? /*#__PURE__*/_jsxDEV(Flex, {\n          flex: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 24\n        }, this) : null, /*#__PURE__*/_jsxDEV(Stack, {\n          flex: 1,\n          color: 'gray.500',\n          justify: {\n            lg: 'center'\n          },\n          py: {\n            base: 4,\n            md: 20,\n            xl: 60\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: {\n              base: 8,\n              md: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              color: 'gray.700',\n              mb: 5,\n              fontSize: {\n                base: '3xl',\n                md: '5xl'\n              },\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: 'xl',\n              color: 'gray.600',\n              children: subtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n            columns: {\n              base: 1,\n              md: 1\n            },\n            spacing: 10,\n            children: stats.map(function (stat) {\n              return /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  fontFamily: 'heading',\n                  fontSize: '3xl',\n                  color: 'gray.700',\n                  mb: 3,\n                  children: stat.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: 'xl',\n                  color: 'gray.600',\n                  children: stat.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, _this)]\n              }, stat.title, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), secondary ? null : /*#__PURE__*/_jsxDEV(Flex, {\n          flex: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = StatsGridWithImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatsGridWithImage\");","map":{"version":3,"sources":["/home/adrian/programacion/adrian/bodaWebsite/source/src/components/Middle/StatsGridWithImage.jsx"],"names":["Stack","Container","Box","Flex","Text","Heading","SimpleGrid","LandingTwo","StatsGridWithImage","props","title","subtitle","stats","secondary","base","lg","md","xl","map","stat","content"],"mappings":"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","sourcesContent":["import {\n  Stack,\n  Container,\n  Box,\n  Flex,\n  Text,\n  Heading,\n  SimpleGrid,\n} from '@chakra-ui/react';\nimport LandingTwo from '../../images/landing2.jpg';\n\nexport default function StatsGridWithImage(props) {\n  const { title, subtitle, stats, secondary } = props;\n\n  return (\n    <Box bg={'orange.200'} position={'relative'}>\n      <Flex\n        flex={1}\n        zIndex={0}\n        display={{ base: 'none', lg: 'flex' }}\n        backgroundImage={LandingTwo}\n        backgroundSize={'cover'}\n        backgroundPosition=\"center\"\n        backgroundRepeat=\"no-repeat\"\n        position={'absolute'}\n        width={'50%'}\n        insetY={0}\n        right={secondary ? '50%' : '0'}\n      >\n        {secondary ? (\n          <Flex\n            bgGradient={'linear(to-l, orange.200 10%, transparent)'}\n            w={'full'}\n            h={'full'}\n          />\n        ) : (\n          <Flex\n            bgGradient={'linear(to-r, orange.200 10%, transparent)'}\n            w={'full'}\n            h={'full'}\n          />\n        )}\n      </Flex>\n      <Container maxW={'7xl'} zIndex={10} position={'relative'}>\n        <Stack direction={{ base: 'column', lg: 'row' }}>\n          {secondary ? <Flex flex={1} /> : null}\n          <Stack\n            flex={1}\n            color={'gray.500'}\n            justify={{ lg: 'center' }}\n            py={{ base: 4, md: 20, xl: 60 }}\n          >\n            <Box mb={{ base: 8, md: 20 }}>\n              <Heading\n                color={'gray.700'}\n                mb={5}\n                fontSize={{ base: '3xl', md: '5xl' }}\n              >\n                {title}\n              </Heading>\n              <Text fontSize={'xl'} color={'gray.600'}>\n                {subtitle}\n              </Text>\n            </Box>\n\n            <SimpleGrid columns={{ base: 1, md: 1 }} spacing={10}>\n              {stats.map(stat => (\n                <Box key={stat.title}>\n                  <Text\n                    fontFamily={'heading'}\n                    fontSize={'3xl'}\n                    color={'gray.700'}\n                    mb={3}\n                  >\n                    {stat.title}\n                  </Text>\n                  <Text fontSize={'xl'} color={'gray.600'}>\n                    {stat.content}\n                  </Text>\n                </Box>\n              ))}\n            </SimpleGrid>\n          </Stack>\n          {secondary ? null : <Flex flex={1} />}\n        </Stack>\n      </Container>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}