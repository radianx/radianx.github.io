{"ast":null,"code":"import{Stack,Container,Box,Flex,Text,Heading,SimpleGrid}from\"@chakra-ui/react\";import LandingTwo from\"../../images/fatima.jpg\";import Allaite from\"../../images/allaite.jpg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function StatsGridWithImage(props){var title=props.title,subtitle=props.subtitle,stats=props.stats,secondary=props.secondary;return/*#__PURE__*/_jsxs(Box,{bg:\"orange.200\",position:\"relative\",children:[/*#__PURE__*/_jsx(Flex,{flex:1,zIndex:0,display:{base:\"none\",lg:\"flex\"},backgroundImage:secondary?Allaite:LandingTwo,backgroundSize:\"cover\",backgroundPosition:\"center\",backgroundRepeat:\"no-repeat\",position:\"absolute\",width:\"50%\",insetY:0,right:secondary?\"50%\":\"0\",children:secondary?/*#__PURE__*/_jsx(Flex,{bgGradient:\"linear(to-l, orange.200 10%, transparent)\",w:\"full\",h:\"full\"}):/*#__PURE__*/_jsx(Flex,{bgGradient:\"linear(to-r, orange.200 10%, transparent)\",w:\"full\",h:\"full\"})}),/*#__PURE__*/_jsx(Container,{maxW:\"7xl\",zIndex:10,position:\"relative\",children:/*#__PURE__*/_jsxs(Stack,{direction:{base:\"column\",lg:\"row\"},children:[secondary?/*#__PURE__*/_jsx(Flex,{flex:1}):null,/*#__PURE__*/_jsxs(Stack,{flex:1,color:\"gray.500\",justify:{lg:\"center\"},py:{base:4,md:20,xl:60},children:[/*#__PURE__*/_jsxs(Box,{mb:{base:8,md:20},children:[/*#__PURE__*/_jsx(Heading,{color:\"gray.700\",mb:5,fontSize:{base:\"3xl\",md:\"5xl\"},children:title}),/*#__PURE__*/_jsx(Text,{fontSize:\"xl\",color:\"gray.600\",children:subtitle})]}),/*#__PURE__*/_jsx(SimpleGrid,{columns:{base:1,md:1},spacing:10,children:stats.map(function(stat){return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Text,{fontFamily:\"heading\",fontSize:\"3xl\",color:\"gray.700\",mb:3,children:stat.title}),/*#__PURE__*/_jsx(Text,{fontSize:\"xl\",color:\"gray.600\",children:stat.content})]},stat.title);})})]}),secondary?null:/*#__PURE__*/_jsx(Flex,{flex:1})]})})]});}","map":{"version":3,"sources":["/home/adrian/programacion/adrian/bodaWebsite/source/src/components/Middle/StatsGridWithImage.jsx"],"names":["Stack","Container","Box","Flex","Text","Heading","SimpleGrid","LandingTwo","Allaite","StatsGridWithImage","props","title","subtitle","stats","secondary","base","lg","md","xl","map","stat","content"],"mappings":"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","sourcesContent":["import {\n  Stack,\n  Container,\n  Box,\n  Flex,\n  Text,\n  Heading,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport LandingTwo from \"../../images/fatima.jpg\";\nimport Allaite from \"../../images/allaite.jpg\";\n\nexport default function StatsGridWithImage(props) {\n  const { title, subtitle, stats, secondary } = props;\n\n  return (\n    <Box bg={\"orange.200\"} position={\"relative\"}>\n      <Flex\n        flex={1}\n        zIndex={0}\n        display={{ base: \"none\", lg: \"flex\" }}\n        backgroundImage={secondary ? Allaite : LandingTwo}\n        backgroundSize={\"cover\"}\n        backgroundPosition=\"center\"\n        backgroundRepeat=\"no-repeat\"\n        position={\"absolute\"}\n        width={\"50%\"}\n        insetY={0}\n        right={secondary ? \"50%\" : \"0\"}\n      >\n        {secondary ? (\n          <Flex\n            bgGradient={\"linear(to-l, orange.200 10%, transparent)\"}\n            w={\"full\"}\n            h={\"full\"}\n          />\n        ) : (\n          <Flex\n            bgGradient={\"linear(to-r, orange.200 10%, transparent)\"}\n            w={\"full\"}\n            h={\"full\"}\n          />\n        )}\n      </Flex>\n      <Container maxW={\"7xl\"} zIndex={10} position={\"relative\"}>\n        <Stack direction={{ base: \"column\", lg: \"row\" }}>\n          {secondary ? <Flex flex={1} /> : null}\n          <Stack\n            flex={1}\n            color={\"gray.500\"}\n            justify={{ lg: \"center\" }}\n            py={{ base: 4, md: 20, xl: 60 }}\n          >\n            <Box mb={{ base: 8, md: 20 }}>\n              <Heading\n                color={\"gray.700\"}\n                mb={5}\n                fontSize={{ base: \"3xl\", md: \"5xl\" }}\n              >\n                {title}\n              </Heading>\n              <Text fontSize={\"xl\"} color={\"gray.600\"}>\n                {subtitle}\n              </Text>\n            </Box>\n\n            <SimpleGrid columns={{ base: 1, md: 1 }} spacing={10}>\n              {stats.map((stat) => (\n                <Box key={stat.title}>\n                  <Text\n                    fontFamily={\"heading\"}\n                    fontSize={\"3xl\"}\n                    color={\"gray.700\"}\n                    mb={3}\n                  >\n                    {stat.title}\n                  </Text>\n                  <Text fontSize={\"xl\"} color={\"gray.600\"}>\n                    {stat.content}\n                  </Text>\n                </Box>\n              ))}\n            </SimpleGrid>\n          </Stack>\n          {secondary ? null : <Flex flex={1} />}\n        </Stack>\n      </Container>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}